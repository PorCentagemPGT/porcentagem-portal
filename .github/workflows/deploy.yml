name: CI/CD - Deploy Next.js Portal to Azure

on:
  push:
    branches: [main] # ou altere se estiver usando outra branch de deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      ACR_NAME: PorCentagem
      ACR_LOGIN_SERVER: porcentagem.azurecr.io
      RESOURCE_GROUP: PorCentagem
      APP_NAME: porcentagem
      IMAGE_NAME: portal

    steps:
      - name: üîÅ Checkout do reposit√≥rio
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üîê Login no Azure (Service Principal)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üì¶ Login no Azure Container Registry
        run: az acr login --name $ACR_NAME

      - name: üê≥ Build e Push da imagem Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}

      - name: ‚öôÔ∏è Setar App Settings no Azure Web App
        run: |
          az webapp config appsettings set --resource-group $RESOURCE_GROUP --name $APP_NAME --settings \
            NODE_ENV=production \
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
            WEBSITES_PORT=3000

      - name: üöÄ Deploy para o Azure Web App (Container)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          images: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
